/*!
 * Copyright 2012 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
import JSBI from "jsbi";
export class JsbiSupport {
    static isZero(value) {
        return JSBI.equal(value, JsbiSupport.ZERO);
    }
    static isNegative(value) {
        return JSBI.lessThan(value, JsbiSupport.ZERO);
    }
    static bigIntFromString(text) {
        let isNegative = false;
        let magnitudeText = text.trimLeft();
        if (text.startsWith("-")) {
            isNegative = true;
            magnitudeText = text.substring(1);
        }
        let bigInt = JSBI.BigInt(magnitudeText);
        if (isNegative) {
            bigInt = JSBI.unaryMinus(bigInt);
        }
        return bigInt;
    }
    static clampToSafeIntegerRange(value) {
        if (JSBI.greaterThan(value, this.NUMBER_MAX_SAFE_INTEGER)) {
            return Number.MAX_SAFE_INTEGER;
        }
        if (JSBI.lessThan(value, this.NUMBER_MIN_SAFE_INTEGER)) {
            return Number.MIN_SAFE_INTEGER;
        }
        return JSBI.toNumber(value);
    }
    static isSafeInteger(value) {
        return (JSBI.greaterThanOrEqual(value, this.NUMBER_MIN_SAFE_INTEGER) &&
            JSBI.lessThanOrEqual(value, this.NUMBER_MAX_SAFE_INTEGER));
    }
}
JsbiSupport.ZERO = JSBI.BigInt(0);
JsbiSupport.ONE = JSBI.BigInt(1);
JsbiSupport.TWO = JSBI.BigInt(2);
JsbiSupport.NUMBER_MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER);
JsbiSupport.NUMBER_MIN_SAFE_INTEGER = JSBI.BigInt(Number.MIN_SAFE_INTEGER);
//# sourceMappingURL=JsbiSupport.js.map