import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CancelJournalKinesisStreamCommandInput,
  CancelJournalKinesisStreamCommandOutput,
} from "./commands/CancelJournalKinesisStreamCommand";
import {
  CreateLedgerCommandInput,
  CreateLedgerCommandOutput,
} from "./commands/CreateLedgerCommand";
import {
  DeleteLedgerCommandInput,
  DeleteLedgerCommandOutput,
} from "./commands/DeleteLedgerCommand";
import {
  DescribeJournalKinesisStreamCommandInput,
  DescribeJournalKinesisStreamCommandOutput,
} from "./commands/DescribeJournalKinesisStreamCommand";
import {
  DescribeJournalS3ExportCommandInput,
  DescribeJournalS3ExportCommandOutput,
} from "./commands/DescribeJournalS3ExportCommand";
import {
  DescribeLedgerCommandInput,
  DescribeLedgerCommandOutput,
} from "./commands/DescribeLedgerCommand";
import {
  ExportJournalToS3CommandInput,
  ExportJournalToS3CommandOutput,
} from "./commands/ExportJournalToS3Command";
import {
  GetBlockCommandInput,
  GetBlockCommandOutput,
} from "./commands/GetBlockCommand";
import {
  GetDigestCommandInput,
  GetDigestCommandOutput,
} from "./commands/GetDigestCommand";
import {
  GetRevisionCommandInput,
  GetRevisionCommandOutput,
} from "./commands/GetRevisionCommand";
import {
  ListJournalKinesisStreamsForLedgerCommandInput,
  ListJournalKinesisStreamsForLedgerCommandOutput,
} from "./commands/ListJournalKinesisStreamsForLedgerCommand";
import {
  ListJournalS3ExportsCommandInput,
  ListJournalS3ExportsCommandOutput,
} from "./commands/ListJournalS3ExportsCommand";
import {
  ListJournalS3ExportsForLedgerCommandInput,
  ListJournalS3ExportsForLedgerCommandOutput,
} from "./commands/ListJournalS3ExportsForLedgerCommand";
import {
  ListLedgersCommandInput,
  ListLedgersCommandOutput,
} from "./commands/ListLedgersCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  StreamJournalToKinesisCommandInput,
  StreamJournalToKinesisCommandOutput,
} from "./commands/StreamJournalToKinesisCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateLedgerCommandInput,
  UpdateLedgerCommandOutput,
} from "./commands/UpdateLedgerCommand";
import {
  UpdateLedgerPermissionsModeCommandInput,
  UpdateLedgerPermissionsModeCommandOutput,
} from "./commands/UpdateLedgerPermissionsModeCommand";
import { QLDBClient } from "./QLDBClient";
export interface QLDB {
  cancelJournalKinesisStream(
    args: CancelJournalKinesisStreamCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelJournalKinesisStreamCommandOutput>;
  cancelJournalKinesisStream(
    args: CancelJournalKinesisStreamCommandInput,
    cb: (err: any, data?: CancelJournalKinesisStreamCommandOutput) => void
  ): void;
  cancelJournalKinesisStream(
    args: CancelJournalKinesisStreamCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelJournalKinesisStreamCommandOutput) => void
  ): void;
  createLedger(
    args: CreateLedgerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateLedgerCommandOutput>;
  createLedger(
    args: CreateLedgerCommandInput,
    cb: (err: any, data?: CreateLedgerCommandOutput) => void
  ): void;
  createLedger(
    args: CreateLedgerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateLedgerCommandOutput) => void
  ): void;
  deleteLedger(
    args: DeleteLedgerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLedgerCommandOutput>;
  deleteLedger(
    args: DeleteLedgerCommandInput,
    cb: (err: any, data?: DeleteLedgerCommandOutput) => void
  ): void;
  deleteLedger(
    args: DeleteLedgerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLedgerCommandOutput) => void
  ): void;
  describeJournalKinesisStream(
    args: DescribeJournalKinesisStreamCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeJournalKinesisStreamCommandOutput>;
  describeJournalKinesisStream(
    args: DescribeJournalKinesisStreamCommandInput,
    cb: (err: any, data?: DescribeJournalKinesisStreamCommandOutput) => void
  ): void;
  describeJournalKinesisStream(
    args: DescribeJournalKinesisStreamCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeJournalKinesisStreamCommandOutput) => void
  ): void;
  describeJournalS3Export(
    args: DescribeJournalS3ExportCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeJournalS3ExportCommandOutput>;
  describeJournalS3Export(
    args: DescribeJournalS3ExportCommandInput,
    cb: (err: any, data?: DescribeJournalS3ExportCommandOutput) => void
  ): void;
  describeJournalS3Export(
    args: DescribeJournalS3ExportCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeJournalS3ExportCommandOutput) => void
  ): void;
  describeLedger(
    args: DescribeLedgerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeLedgerCommandOutput>;
  describeLedger(
    args: DescribeLedgerCommandInput,
    cb: (err: any, data?: DescribeLedgerCommandOutput) => void
  ): void;
  describeLedger(
    args: DescribeLedgerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeLedgerCommandOutput) => void
  ): void;
  exportJournalToS3(
    args: ExportJournalToS3CommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ExportJournalToS3CommandOutput>;
  exportJournalToS3(
    args: ExportJournalToS3CommandInput,
    cb: (err: any, data?: ExportJournalToS3CommandOutput) => void
  ): void;
  exportJournalToS3(
    args: ExportJournalToS3CommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ExportJournalToS3CommandOutput) => void
  ): void;
  getBlock(
    args: GetBlockCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBlockCommandOutput>;
  getBlock(
    args: GetBlockCommandInput,
    cb: (err: any, data?: GetBlockCommandOutput) => void
  ): void;
  getBlock(
    args: GetBlockCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBlockCommandOutput) => void
  ): void;
  getDigest(
    args: GetDigestCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDigestCommandOutput>;
  getDigest(
    args: GetDigestCommandInput,
    cb: (err: any, data?: GetDigestCommandOutput) => void
  ): void;
  getDigest(
    args: GetDigestCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDigestCommandOutput) => void
  ): void;
  getRevision(
    args: GetRevisionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRevisionCommandOutput>;
  getRevision(
    args: GetRevisionCommandInput,
    cb: (err: any, data?: GetRevisionCommandOutput) => void
  ): void;
  getRevision(
    args: GetRevisionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRevisionCommandOutput) => void
  ): void;
  listJournalKinesisStreamsForLedger(
    args: ListJournalKinesisStreamsForLedgerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListJournalKinesisStreamsForLedgerCommandOutput>;
  listJournalKinesisStreamsForLedger(
    args: ListJournalKinesisStreamsForLedgerCommandInput,
    cb: (
      err: any,
      data?: ListJournalKinesisStreamsForLedgerCommandOutput
    ) => void
  ): void;
  listJournalKinesisStreamsForLedger(
    args: ListJournalKinesisStreamsForLedgerCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: ListJournalKinesisStreamsForLedgerCommandOutput
    ) => void
  ): void;
  listJournalS3Exports(
    args: ListJournalS3ExportsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListJournalS3ExportsCommandOutput>;
  listJournalS3Exports(
    args: ListJournalS3ExportsCommandInput,
    cb: (err: any, data?: ListJournalS3ExportsCommandOutput) => void
  ): void;
  listJournalS3Exports(
    args: ListJournalS3ExportsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListJournalS3ExportsCommandOutput) => void
  ): void;
  listJournalS3ExportsForLedger(
    args: ListJournalS3ExportsForLedgerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListJournalS3ExportsForLedgerCommandOutput>;
  listJournalS3ExportsForLedger(
    args: ListJournalS3ExportsForLedgerCommandInput,
    cb: (err: any, data?: ListJournalS3ExportsForLedgerCommandOutput) => void
  ): void;
  listJournalS3ExportsForLedger(
    args: ListJournalS3ExportsForLedgerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListJournalS3ExportsForLedgerCommandOutput) => void
  ): void;
  listLedgers(
    args: ListLedgersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListLedgersCommandOutput>;
  listLedgers(
    args: ListLedgersCommandInput,
    cb: (err: any, data?: ListLedgersCommandOutput) => void
  ): void;
  listLedgers(
    args: ListLedgersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListLedgersCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  streamJournalToKinesis(
    args: StreamJournalToKinesisCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StreamJournalToKinesisCommandOutput>;
  streamJournalToKinesis(
    args: StreamJournalToKinesisCommandInput,
    cb: (err: any, data?: StreamJournalToKinesisCommandOutput) => void
  ): void;
  streamJournalToKinesis(
    args: StreamJournalToKinesisCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StreamJournalToKinesisCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateLedger(
    args: UpdateLedgerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateLedgerCommandOutput>;
  updateLedger(
    args: UpdateLedgerCommandInput,
    cb: (err: any, data?: UpdateLedgerCommandOutput) => void
  ): void;
  updateLedger(
    args: UpdateLedgerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateLedgerCommandOutput) => void
  ): void;
  updateLedgerPermissionsMode(
    args: UpdateLedgerPermissionsModeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateLedgerPermissionsModeCommandOutput>;
  updateLedgerPermissionsMode(
    args: UpdateLedgerPermissionsModeCommandInput,
    cb: (err: any, data?: UpdateLedgerPermissionsModeCommandOutput) => void
  ): void;
  updateLedgerPermissionsMode(
    args: UpdateLedgerPermissionsModeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateLedgerPermissionsModeCommandOutput) => void
  ): void;
}
export declare class QLDB extends QLDBClient implements QLDB {}
