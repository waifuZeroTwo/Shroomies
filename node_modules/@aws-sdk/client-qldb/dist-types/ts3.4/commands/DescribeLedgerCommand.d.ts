import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  DescribeLedgerRequest,
  DescribeLedgerResponse,
} from "../models/models_0";
import {
  QLDBClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../QLDBClient";
export { __MetadataBearer, $Command };
export interface DescribeLedgerCommandInput extends DescribeLedgerRequest {}
export interface DescribeLedgerCommandOutput
  extends DescribeLedgerResponse,
    __MetadataBearer {}
export declare class DescribeLedgerCommand extends $Command<
  DescribeLedgerCommandInput,
  DescribeLedgerCommandOutput,
  QLDBClientResolvedConfig
> {
  readonly input: DescribeLedgerCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeLedgerCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: QLDBClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<DescribeLedgerCommandInput, DescribeLedgerCommandOutput>;
  private serialize;
  private deserialize;
}
