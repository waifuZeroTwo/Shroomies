import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ListJournalKinesisStreamsForLedgerRequest,
  ListJournalKinesisStreamsForLedgerResponse,
} from "../models/models_0";
import {
  QLDBClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../QLDBClient";
export { __MetadataBearer, $Command };
export interface ListJournalKinesisStreamsForLedgerCommandInput
  extends ListJournalKinesisStreamsForLedgerRequest {}
export interface ListJournalKinesisStreamsForLedgerCommandOutput
  extends ListJournalKinesisStreamsForLedgerResponse,
    __MetadataBearer {}
export declare class ListJournalKinesisStreamsForLedgerCommand extends $Command<
  ListJournalKinesisStreamsForLedgerCommandInput,
  ListJournalKinesisStreamsForLedgerCommandOutput,
  QLDBClientResolvedConfig
> {
  readonly input: ListJournalKinesisStreamsForLedgerCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ListJournalKinesisStreamsForLedgerCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: QLDBClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    ListJournalKinesisStreamsForLedgerCommandInput,
    ListJournalKinesisStreamsForLedgerCommandOutput
  >;
  private serialize;
  private deserialize;
}
