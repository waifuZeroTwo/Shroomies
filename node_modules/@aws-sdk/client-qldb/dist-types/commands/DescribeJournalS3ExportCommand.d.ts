import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@smithy/types";
import { DescribeJournalS3ExportRequest, DescribeJournalS3ExportResponse } from "../models/models_0";
import { QLDBClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../QLDBClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DescribeJournalS3ExportCommand}.
 */
export interface DescribeJournalS3ExportCommandInput extends DescribeJournalS3ExportRequest {
}
/**
 * @public
 *
 * The output of {@link DescribeJournalS3ExportCommand}.
 */
export interface DescribeJournalS3ExportCommandOutput extends DescribeJournalS3ExportResponse, __MetadataBearer {
}
/**
 * @public
 * <p>Returns information about a journal export job, including the ledger name, export ID,
 *          creation time, current status, and the parameters of the original export creation
 *          request.</p>
 *          <p>This action does not return any expired export jobs. For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/export-journal.request.html#export-journal.request.expiration">Export job expiration</a> in the <i>Amazon QLDB Developer
 *          Guide</i>.</p>
 *          <p>If the export job with the given <code>ExportId</code> doesn't exist, then throws
 *             <code>ResourceNotFoundException</code>.</p>
 *          <p>If the ledger with the given <code>Name</code> doesn't exist, then throws
 *             <code>ResourceNotFoundException</code>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { QLDBClient, DescribeJournalS3ExportCommand } from "@aws-sdk/client-qldb"; // ES Modules import
 * // const { QLDBClient, DescribeJournalS3ExportCommand } = require("@aws-sdk/client-qldb"); // CommonJS import
 * const client = new QLDBClient(config);
 * const input = { // DescribeJournalS3ExportRequest
 *   Name: "STRING_VALUE", // required
 *   ExportId: "STRING_VALUE", // required
 * };
 * const command = new DescribeJournalS3ExportCommand(input);
 * const response = await client.send(command);
 * // { // DescribeJournalS3ExportResponse
 * //   ExportDescription: { // JournalS3ExportDescription
 * //     LedgerName: "STRING_VALUE", // required
 * //     ExportId: "STRING_VALUE", // required
 * //     ExportCreationTime: new Date("TIMESTAMP"), // required
 * //     Status: "IN_PROGRESS" || "COMPLETED" || "CANCELLED", // required
 * //     InclusiveStartTime: new Date("TIMESTAMP"), // required
 * //     ExclusiveEndTime: new Date("TIMESTAMP"), // required
 * //     S3ExportConfiguration: { // S3ExportConfiguration
 * //       Bucket: "STRING_VALUE", // required
 * //       Prefix: "STRING_VALUE", // required
 * //       EncryptionConfiguration: { // S3EncryptionConfiguration
 * //         ObjectEncryptionType: "SSE_KMS" || "SSE_S3" || "NO_ENCRYPTION", // required
 * //         KmsKeyArn: "STRING_VALUE",
 * //       },
 * //     },
 * //     RoleArn: "STRING_VALUE", // required
 * //     OutputFormat: "ION_BINARY" || "ION_TEXT" || "JSON",
 * //   },
 * // };
 *
 * ```
 *
 * @param DescribeJournalS3ExportCommandInput - {@link DescribeJournalS3ExportCommandInput}
 * @returns {@link DescribeJournalS3ExportCommandOutput}
 * @see {@link DescribeJournalS3ExportCommandInput} for command's `input` shape.
 * @see {@link DescribeJournalS3ExportCommandOutput} for command's `response` shape.
 * @see {@link QLDBClientResolvedConfig | config} for QLDBClient's `config` shape.
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The specified resource doesn't exist.</p>
 *
 * @throws {@link QLDBServiceException}
 * <p>Base exception class for all service exceptions from QLDB service.</p>
 *
 */
export declare class DescribeJournalS3ExportCommand extends $Command<DescribeJournalS3ExportCommandInput, DescribeJournalS3ExportCommandOutput, QLDBClientResolvedConfig> {
    readonly input: DescribeJournalS3ExportCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    /**
     * @public
     */
    constructor(input: DescribeJournalS3ExportCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: QLDBClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeJournalS3ExportCommandInput, DescribeJournalS3ExportCommandOutput>;
    /**
     * @internal
     */
    private serialize;
    /**
     * @internal
     */
    private deserialize;
}
